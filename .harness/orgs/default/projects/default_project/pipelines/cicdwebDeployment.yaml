pipeline:
  name: cicd-webDeployment
  identifier: cicdwebDeployment
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: hiteshsurya17flightdelay
        build:
          type: branch
          spec:
            branch: main
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: GitClone
                  name: GitClone_1
                  identifier: GitClone_1
                  spec:
                    connectorRef: hiteshsurya17flightdelay
                    build:
                      type: branch
                      spec:
                        branch: main
              - step:
                  type: Run
                  name: Install dependencies
                  identifier: Install_dependencies
                  spec:
                    shell: Bash
                    command: |-
                      python3 -m venv venv
                      source venv/bin/activate
                      pip install -r requirements.txt
              - step:
                  type: Run
                  name: Build Docker Image
                  identifier: Build_Docker_Image
                  spec:
                    shell: Bash
                    command: |-
                      # Build Docker image locally
                      docker build -t myapp:latest .
    - stage:
        name: Terraform Provisioning
        identifier: Terraform_Provisioning
        description: ""
        type: Custom
        spec:
          runtime:
            type: Cloud
            spec:
              image: hashicorp/terraform:light
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: Write Terraform Files
                  identifier: Write_Terraform_Files
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |
                          mkdir -p terraform
                          cd terraform

                          # Write main.tf
                          cat <<EOF > main.tf
                          provider "kubernetes" {
                            config_path = "~/.kube/config"
                          }

                          resource "kubernetes_deployment" "app" {
                            metadata {
                              name = "myapp"
                              labels = {
                                app = "myapp"
                              }
                            }

                            spec {
                              replicas = 1

                              selector {
                                match_labels = {
                                  app = "myapp"
                                }
                              }

                              template {
                                metadata {
                                  labels = {
                                    app = "myapp"
                                  }
                                }

                                spec {
                                  container {
                                    image = "myapp:latest"
                                    name  = "myapp"
                                    port {
                                      container_port = 5000
                                    }
                                  }
                                }
                              }
                            }
                          }

                          resource "kubernetes_service" "app_service" {
                            metadata {
                              name = "myapp-service"
                            }

                            spec {
                              selector = {
                                app = "myapp"
                              }

                              port {
                                protocol    = "TCP"
                                port        = 80
                                target_port = 5000
                              }

                              type = "NodePort"
                            }
                          }
                          EOF

                          # Write versions.tf
                          cat <<EOF > versions.tf
                          terraform {
                            required_providers {
                              kubernetes = {
                                source  = "hashicorp/kubernetes"
                                version = "~> 2.0"
                              }
                            }
                          }
                          EOF
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: ShellScript
                  name: terraform init
                  identifier: terraform_init
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |-
                          wget https://releases.hashicorp.com/terraform/1.6.6/terraform_1.6.6_linux_amd64.zip
                          unzip terraform_1.6.6_linux_amd64.zip
                          mv terraform /usr/local/bin/
                          terraform version
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: ShellScript
                  name: Terraform apply
                  identifier: Terraform_apply
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |
                          cd terraform

                          terraform init
                          terraform apply -auto-approve
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
          environment:
            environmentRef: harnessdevenv
            deployToAll: false
        tags: {}
        delegateSelectors:
          - kubernetes-delegate
